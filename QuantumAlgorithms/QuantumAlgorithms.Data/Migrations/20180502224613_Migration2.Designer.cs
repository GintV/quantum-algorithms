// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using QuantumAlgorithms.Data;
using QuantumAlgorithms.Domain;
using System;

namespace QuantumAlgorithms.Data.Migrations
{
    [DbContext(typeof(QuantumAlgorithmsDbContext))]
    [Migration("20180502224613_Migration2")]
    partial class Migration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QuantumAlgorithms.Domain.ExecutionMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Message");

                    b.Property<Guid>("QuantumAlgorithmId");

                    b.Property<int>("Severity");

                    b.Property<DateTime>("TimeStamp");

                    b.HasKey("Id");

                    b.HasIndex("QuantumAlgorithmId");

                    b.ToTable("ExecutionMessages");
                });

            modelBuilder.Entity("QuantumAlgorithms.Domain.QuantumAlgorithm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("QuantumAlgorithm");

                    b.HasDiscriminator<string>("Discriminator").HasValue("QuantumAlgorithm");
                });

            modelBuilder.Entity("QuantumAlgorithms.Domain.DiscreteLogarithm", b =>
                {
                    b.HasBaseType("QuantumAlgorithms.Domain.QuantumAlgorithm");

                    b.Property<int>("Exponent");

                    b.Property<int>("Generator");

                    b.Property<int>("Modulus");

                    b.Property<int>("Result");

                    b.ToTable("DiscreteLogarithm");

                    b.HasDiscriminator().HasValue("DiscreteLogarithm");
                });

            modelBuilder.Entity("QuantumAlgorithms.Domain.IntegerFactorization", b =>
                {
                    b.HasBaseType("QuantumAlgorithms.Domain.QuantumAlgorithm");

                    b.Property<int>("FactorP");

                    b.Property<int>("FactorQ");

                    b.Property<int>("Number");

                    b.ToTable("IntegerFactorization");

                    b.HasDiscriminator().HasValue("IntegerFactorization");
                });

            modelBuilder.Entity("QuantumAlgorithms.Domain.ExecutionMessage", b =>
                {
                    b.HasOne("QuantumAlgorithms.Domain.QuantumAlgorithm", "QuantumAlgorithm")
                        .WithMany("Messages")
                        .HasForeignKey("QuantumAlgorithmId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
